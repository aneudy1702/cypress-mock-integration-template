name: Cypress and Jest Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # Job for running Jest tests
  run-jest-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run Jest tests
      - name: Run Jest tests
        run: npm run test:jest:ci

      # Generate and upload coverage report (optional)
      - name: Upload Jest coverage report
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: jest-coverage
          path: coverage

  # Job for running Cypress tests
  run-cypress-tests:
    runs-on: ubuntu-latest
    needs: run-jest-tests # This ensures that Cypress tests run only if Jest tests succeed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache Node modules
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Create placeholder directories for screenshots and videos
      - name: Create placeholder directories
        run: |
          mkdir -p cypress/screenshots
          mkdir -p cypress/videos

      # Start application server
      - name: Start application server
        run: npm run start &
        env:
          CI: true

      # Wait for server to be ready
      - name: Wait for server to be ready
        run: |
          for i in $(seq 1 60); do
            curl --silent http://localhost:3000 && break
            echo "Waiting for server..."
            sleep 1
          done

      # Run Cypress tests
      - name: Run Cypress tests
        run: npm run cypress:run

      # Generate and upload Cypress report
      - name: Generate Cypress report
        run: npm run report:generate

      # Upload Cypress screenshots as an artifact
      - name: Upload Cypress screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: warn

      # Upload Cypress videos as an artifact
      - name: Upload Cypress videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: warn

      # Upload Cypress HTML report as an artifact
      - name: Upload Cypress Report
        uses: actions/upload-artifact@v4
        with:
          name: cypress-report
          path: cypress/reports/report.html
